This is METAFONT, Version 2.71828182 (preloaded base=mf 2021.10.7)  9 FEB 2022 20:46
**\mode:=ljfour; mag:=1; ; nonstopmode; input cmmi0

(/Users/alessandromastrofini/Library/texlive/2021/texmf-var/fonts/source/public
/sauter/cmmi0.mf
(/usr/local/texlive/2021/texmf-dist/fonts/source/public/sauter/b-cmmi.mf
(/usr/local/texlive/2021/texmf-dist/fonts/source/public/cm/cmbase.mf)
(/usr/local/texlive/2021/texmf-dist/fonts/source/public/sauter/c-cmmi.mf
(/usr/local/texlive/2021/texmf-dist/fonts/source/public/sauter/c-cmr.mf))
(/usr/local/texlive/2021/texmf-dist/fonts/source/public/cm/mathit.mf
(/usr/local/texlive/2021/texmf-dist/fonts/source/public/cm/romanu.mf
! Value is too large (9420.78125).
diag_ratio->...EXPR3)/(EXPR4);cc_=(EXPR5)/(EXPR4);
                                                  aa_=(EXPR2)*(EXPR2)-bb_*bb...
l.20 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Arithmetic overflow.
diag_ratio->...EXPR4);aa_=(EXPR2)*(EXPR2)-bb_*bb_;
                                                  ((EXPR2)*(cc_++sqrt.aa_)-b...
l.20 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (-32763.99998).
diag_ratio->...EXPR4);aa_=(EXPR2)*(EXPR2)-bb_*bb_;
                                                  ((EXPR2)*(cc_++sqrt.aa_)-b...
l.20 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Square root of -32763.99998 has been replaced by 0.
diag_ratio->...2)-bb_*bb_;((EXPR2)*(cc_++sqrt.aa_)
                                                  -bb_*cc_)/aa_.endgroup
l.20 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! Arithmetic overflow.
diag_ratio->..._;((EXPR2)*(cc_++sqrt.aa_)-bb_*cc_)
                                                  /aa_.endgroup
l.20 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (4529.14482).
l.33 y5r-y5l=y6r-y6l=cap_band;
                               penstroke z5e--z6e; % bar line
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4510.34483).
l.33 y5r-y5l=y6r-y6l=cap_band;
                               penstroke z5e--z6e; % bar line
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4223.85376).
l.33 y5r-y5l=y6r-y6l=cap_band;
                               penstroke z5e--z6e; % bar line
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4232.3871).
l.33 y5r-y5l=y6r-y6l=cap_band;
                               penstroke z5e--z6e; % bar line
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
l.33 y5r-y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Value is too large (4371.46666).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.35  prime_points_inside(1,2)
                              ; prime_points_inside(4,3);
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4371.46678).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.35  prime_points_inside(1,2)
                              ; prime_points_inside(4,3);
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4357.46666).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  
l.35 ...ints_inside(1,2); prime_points_inside(4,3)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4357.46678).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  
l.35 ...ints_inside(1,2); prime_points_inside(4,3)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4370.60524).
serif->...(SUFFIX4)1=tiny.lft.x(SUFFIX2)l+(EXPR6);
                                                  if.x(SUFFIX4)3<x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.38 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4370.60524).
serif->...(SUFFIX4)1=tiny.lft.x(SUFFIX2)l+(EXPR6);
                                                  if.x(SUFFIX4)3<x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.38 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.38 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Value is too large (-4366.26666).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.38 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4366.26666).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.38 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4366.26715).
serif->...FIX4)2-eps:x(SUFFIX4)3:=x(SUFFIX4)2-eps;
                                                  fi.fi.pair.corner;ypart.co...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.38 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4366.26666).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.38 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4366.26666).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.38 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.38 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Curve out of range.
<to be read again> 
                   ;
erase->...fault_wt_:=_;cullit;(TEXT0)withweight._;
                                                  cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.38 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Value is too large (4379.86667).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4379.86667).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4379.86716).
serif->...FIX4)2+eps:x(SUFFIX4)3:=x(SUFFIX4)2+eps;
                                                  fi.else:z(SUFFIX4)2-penoff...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4379.86667).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4379.86667).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Value is too large (-4356.60524).
serif->...x(SUFFIX4)1=tiny.rt.x(SUFFIX2)r+(EXPR6);
                                                  if.x(SUFFIX4)3>x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4356.60524).
serif->...x(SUFFIX4)1=tiny.rt.x(SUFFIX2)r+(EXPR6);
                                                  if.x(SUFFIX4)3>x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

> 0 WSW 1 2 (WNW NNW) NNE 3 ENE 4 ESE 5 ENE 0 (NNE NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Curve out of range.
<to be read again> 
                   ;
erase->...fault_wt_:=_;cullit;(TEXT0)withweight._;
                                                  cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.39 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

[65] [66] [67] [68] [69] [70]
> 0 ENE 1 NNE 2 (NNW WNW) WSW WNW NNW NNE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.179 ...8l{down}..{4(x9-x8),y9-y8}z9--z8r--cycle;
                                                   fi % spur
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE) NNW WNW 2 3 NNW NNE 4 ENE 5 6 ESE ENE NNE 7 (NNW WNW) WSW 8 SSW
 WSW WNW NNW NNE ENE 9 ESE 10 SSE SSW 11 SSE ESE 12 13 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.188 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[71] [72] [73]
> 0 ENE 1 NNE 2 NNW WNW 3 4 (NNW) NNE 5 (ENE) ESE 6 SSE SSW 7 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.260  filldraw stroke z1e--z2e&super_arc.e(2,3);
                                                   % stem and arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 SSW 1 WSW SSW 2 (SSE ESE) ENE 3 NNE ENE 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.262  pickup tiny.nib; bulb(3,4,5)
                                   ;  % bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[74] [75] [76]
! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.352  fill z5l..{z6-z5}diag_in(5l,6l,1,6r)
                                           ..diag_out(7l,1,7r,8r){z8-z7}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.352  fill z5l..{z6-z5}diag_in(5l,6l,1,6r)
                                           ..diag_out(7l,1,7r,8r){z8-z7}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+7.99988,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.352  fill z5l..{z6-z5}diag_in(5l,6l,1,6r)
                                           ..diag_out(7l,1,7r,8r){z8-z7}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+7.99988,0.5)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.352  fill z5l..{z6-z5}diag_in(5l,6l,1,6r)
                                           ..diag_out(7l,1,7r,8r){z8-z7}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_out->...,y_)=whatever[z(SUFFIX4),z(SUFFIX5)];
                                                  z(SUFFIX4)-(EXPR3)*length(...
l.352 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x+8.99988,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_out->...(EXPR3)*length(z(SUFFIX4)-(to_x,y_))*
                                                  unitvector(z(SUFFIX4)-z(SU...
l.352 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-to_x+8.99988,0.5)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   {
diag_out->...))*unitvector(z(SUFFIX4)-z(SUFFIX2)){
                                                  z(SUFFIX4)-z(SUFFIX2)}...{...
l.352 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.352 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_out->...,y_)=whatever[z(SUFFIX4),z(SUFFIX5)];
                                                  z(SUFFIX4)-(EXPR3)*length(...
l.353   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}..{z7-z8}z0{z5-z6}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x+13.49951,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_out->...(EXPR3)*length(z(SUFFIX4)-(to_x,y_))*
                                                  unitvector(z(SUFFIX4)-z(SU...
l.353   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}..{z7-z8}z0{z5-z6}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-to_x+13.49951,0.5)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   {
diag_out->...))*unitvector(z(SUFFIX4)-z(SUFFIX2)){
                                                  z(SUFFIX4)-z(SUFFIX2)}...{...
l.353   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}..{z7-z8}z0{z5-z6}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.353   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}..{z7-z8}z0{z5-z6}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
l.353 ...--diag_out(8r,1,8l,7l){z7-z8}..{z7-z8}z0{
                                                  z5-z6}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.354   ..{z5-z6}diag_in(6r,5r,1,5l)
                                    --cycle; fi  % diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.354   ..{z5-z6}diag_in(6r,5r,1,5l)
                                    --cycle; fi  % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+4.50024,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.354   ..{z5-z6}diag_in(6r,5r,1,5l)
                                    --cycle; fi  % diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+4.50024,0.5)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.354   ..{z5-z6}diag_in(6r,5r,1,5l)
                                    --cycle; fi  % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

[77]
> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
l.390  else: serif(5,6,a,1/3,-cap_jut);
                                        fi  % upper left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[78] [79] [80] [81] [82]
> 0 WSW 1 SSW WSW 2 (WNW NNW) NNE 3 ENE NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.511 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[83] [84] [85]
! Value is too large (20164.9375).
diag_ratio->...EXPR3)/(EXPR4);cc_=(EXPR5)/(EXPR4);
                                                  aa_=(EXPR2)*(EXPR2)-bb_*bb...
l.576 ...tio(2,right_stem,y1-y2,x4r-x1l-apex_corr)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Arithmetic overflow.
diag_ratio->...EXPR4);aa_=(EXPR2)*(EXPR2)-bb_*bb_;
                                                  ((EXPR2)*(cc_++sqrt.aa_)-b...
l.576 ...tio(2,right_stem,y1-y2,x4r-x1l-apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (-32763.99998).
diag_ratio->...EXPR4);aa_=(EXPR2)*(EXPR2)-bb_*bb_;
                                                  ((EXPR2)*(cc_++sqrt.aa_)-b...
l.576 ...tio(2,right_stem,y1-y2,x4r-x1l-apex_corr)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Square root of -32763.99998 has been replaced by 0.
diag_ratio->...2)-bb_*bb_;((EXPR2)*(cc_++sqrt.aa_)
                                                  -bb_*cc_)/aa_.endgroup
l.576 ...tio(2,right_stem,y1-y2,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! Arithmetic overflow.
diag_ratio->...)-bb_*bb_;((EXPR2)*(cc_++sqrt.aa_)-
                                                  bb_*cc_)/aa_.endgroup
l.576 ...tio(2,right_stem,y1-y2,x4r-x1l-apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
diag_ratio->..._;((EXPR2)*(cc_++sqrt.aa_)-bb_*cc_)
                                                  /aa_.endgroup
l.576 ...tio(2,right_stem,y1-y2,x4r-x1l-apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.577 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
This error message was generated by an `errmessage'
command, so I can't give any explicit help.
Pretend that you're Miss Marple: Examine all clues,
and deduce the truth by inspired guesses.

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.577 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.578 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.578 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

! Value is too large (-5449).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.584 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --diag_end(4r,3r,1,1,2l,1l)
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-5449).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.584 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --diag_end(4r,3r,1,1,2l,1l)
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4669.28572).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.584 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --diag_end(4r,3r,1,1,2l,1l)
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4669.28572).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.584 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --diag_end(4r,3r,1,1,2l,1l)
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-5449).
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.584 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --diag_end(4r,3r,1,1,2l,1l)
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4693.13191).
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.584 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --diag_end(4r,3r,1,1,2l,1l)
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4688.42857).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.584 ...,4l,1,1,4r,3r)--diag_end(4r,3r,1,1,2l,1l)
                                                  
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4688.42857).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.584 ...,4l,1,1,4r,3r)--diag_end(4r,3r,1,1,2l,1l)
                                                  
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-5454.33333).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.584 ...,4l,1,1,4r,3r)--diag_end(4r,3r,1,1,2l,1l)
                                                  
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-5454.33333).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.584 ...,4l,1,1,4r,3r)--diag_end(4r,3r,1,1,2l,1l)
                                                  
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-4674.42857).
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.584 ...,4l,1,1,4r,3r)--diag_end(4r,3r,1,1,2l,1l)
                                                  
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (5468.33336).
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.584 ...,4l,1,1,4r,3r)--diag_end(4r,3r,1,1,2l,1l)
                                                  
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (5463).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.585     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (5463).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.585     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (5463.33333).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.585     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (5463.33333).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.585     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-5458.84616).
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.585     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (5463.33333).
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.585     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
l.585     --diag_end(2l,1l,1,1,1r,0)--cycle;
                                             fi % left and right diagonals
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! angle(0,0) is taken as zero.
prime_points_inside->...(z(SUFFIX0)r-z(SUFFIX0)l);
                                                  penpos(SUFFIX0)'(whatever,...
l.587  prime_points_inside(1,2)
                               ; prime_points_inside(4,3);
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Value is too large (10924.66667).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.587  prime_points_inside(1,2)
                               ; prime_points_inside(4,3);
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (10924.66672).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.587  prime_points_inside(1,2)
                               ; prime_points_inside(4,3);
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-10920.51288).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.587  prime_points_inside(1,2)
                               ; prime_points_inside(4,3);
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Inconsistent equation (off by 10922.51283).
<to be read again> 
                   ;
l.587  prime_points_inside(1,2)
                               ; prime_points_inside(4,3);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...(z(SUFFIX0)r-z(SUFFIX0)l);
                                                  penpos(SUFFIX0)'(whatever,...
l.587 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Value is too large (-10910.66667).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  
l.587 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Inconsistent equation (off by -10922.51283).
<to be read again> 
                   ;
l.587 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (10934.52324).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (10934.52324).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (10923.85902).
serif->...(SUFFIX4)1=tiny.lft.x(SUFFIX2)l+(EXPR6);
                                                  if.x(SUFFIX4)3<x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (10923.85902).
serif->...(SUFFIX4)1=tiny.lft.x(SUFFIX2)l+(EXPR6);
                                                  if.x(SUFFIX4)3<x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (10934.52373).
serif->...FIX4)2+eps:x(SUFFIX4)3:=x(SUFFIX4)2+eps;
                                                  fi.else:z(SUFFIX4)2-penoff...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (10934.52324).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (10934.52324).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Value is too large (-10910.65634).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-10910.65634).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-10919.43596).
serif->...x(SUFFIX4)1=tiny.rt.x(SUFFIX2)r+(EXPR6);
                                                  if.x(SUFFIX4)3>x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-10919.43596).
serif->...x(SUFFIX4)1=tiny.rt.x(SUFFIX2)r+(EXPR6);
                                                  if.x(SUFFIX4)3>x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-10910.65683).
serif->...FIX4)2-eps:x(SUFFIX4)3:=x(SUFFIX4)2-eps;
                                                  fi.fi.pair.corner;ypart.co...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-10910.65634).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-10910.65634).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Some number got too big.
<to be read again> 
                   )
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The path that I just computed is out of range.
So it will probably look funny. Proceed, for a laugh.

! Curve out of range.
<to be read again> 
                   ;
erase->...fault_wt_:=_;cullit;(TEXT0)withweight._;
                                                  cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.590 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

[86]
! Arithmetic overflow.
diag_ratio->...EXPR3)/(EXPR4);cc_=(EXPR5)/(EXPR4);
                                                  aa_=(EXPR2)*(EXPR2)-bb_*bb...
l.607 ...+stem4,y1-y2,x8r-x1l+mid_corr-2apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (32767.99998).
diag_ratio->...EXPR3)/(EXPR4);cc_=(EXPR5)/(EXPR4);
                                                  aa_=(EXPR2)*(EXPR2)-bb_*bb...
l.607 ...+stem4,y1-y2,x8r-x1l+mid_corr-2apex_corr)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8902.4414).
diag_ratio->...EXPR4);aa_=(EXPR2)*(EXPR2)-bb_*bb_;
                                                  ((EXPR2)*(cc_++sqrt.aa_)-b...
l.607 ...+stem4,y1-y2,x8r-x1l+mid_corr-2apex_corr)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Square root of -8902.4414 has been replaced by 0.
diag_ratio->...2)-bb_*bb_;((EXPR2)*(cc_++sqrt.aa_)
                                                  -bb_*cc_)/aa_.endgroup
l.607 ...+stem4,y1-y2,x8r-x1l+mid_corr-2apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! Arithmetic overflow.
diag_ratio->...)-bb_*bb_;((EXPR2)*(cc_++sqrt.aa_)-
                                                  bb_*cc_)/aa_.endgroup
l.607 ...+stem4,y1-y2,x8r-x1l+mid_corr-2apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
diag_ratio->..._;((EXPR2)*(cc_++sqrt.aa_)-bb_*cc_)
                                                  /aa_.endgroup
l.607 ...+stem4,y1-y2,x8r-x1l+mid_corr-2apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.608 penpos1(alpha*stem1,0)
                            ; penpos2(alpha*stem1,0);
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.608 ...s1(alpha*stem1,0); penpos2(alpha*stem1,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.609 penpos3(alpha*stem2,0)
                            ; penpos4(alpha*stem2,0);
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.609 ...s3(alpha*stem2,0); penpos4(alpha*stem2,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.610 penpos5(alpha*stem3,0)
                            ; penpos6(alpha*stem3,0);
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.610 ...s5(alpha*stem3,0); penpos6(alpha*stem3,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.611 penpos7(alpha*stem4,0)
                            ; penpos8(alpha*stem4,0);
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.611 ...s7(alpha*stem4,0); penpos8(alpha*stem4,0)
                                                  ;
(That was another `errmessage'.)

! Value is too large (4102).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.616 fill diag_end(1l,2l,1,1,3r,4r)
                                    {z4-z3}
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4102).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.616 fill diag_end(1l,2l,1,1,3r,4r)
                                    {z4-z3}
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4102.00003).
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.616 fill diag_end(1l,2l,1,1,3r,4r)
                                    {z4-z3}
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4110).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.619  ...{z6-z5}diag_end(5l,6l,1,1,7r,8r)
                                          --diag_end(7r,8r,1,1,8l,7l){z7-z8}
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4110).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.619  ...{z6-z5}diag_end(5l,6l,1,1,7r,8r)
                                          --diag_end(7r,8r,1,1,8l,7l){z7-z8}
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4110.00003).
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.619  ...{z6-z5}diag_end(5l,6l,1,1,7r,8r)
                                          --diag_end(7r,8r,1,1,8l,7l){z7-z8}
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4113.88889).
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.619 ...,6l,1,1,7r,8r)--diag_end(7r,8r,1,1,8l,7l)
                                                  {z7-z8}
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4106).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...

special_diag_end->...,(SUFFIX3)r,1,1,(SUFFIX3)l,0)
                                                  --z0fi.endgroup
l.622  ...{z5-z6}special_diag_end(6,5,4,3)
                                          {z3-z4}
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4106).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...

special_diag_end->...,(SUFFIX3)r,1,1,(SUFFIX3)l,0)
                                                  --z0fi.endgroup
l.622  ...{z5-z6}special_diag_end(6,5,4,3)
                                          {z3-z4}
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...

special_diag_end->...,(SUFFIX3)r,1,1,(SUFFIX3)l,0)
                                                  --z0fi.endgroup
l.622  ...{z5-z6}special_diag_end(6,5,4,3)
                                          {z3-z4}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x+9.94443,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...

special_diag_end->...,(SUFFIX3)r,1,1,(SUFFIX3)l,0)
                                                  --z0fi.endgroup
l.622  ...{z5-z6}special_diag_end(6,5,4,3)
                                          {z3-z4}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 9.94443
>> (-to_x+9.94443,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...

special_diag_end->...,(SUFFIX3)r,1,1,(SUFFIX3)l,0)
                                                  --z0fi.endgroup
l.622  ...{z5-z6}special_diag_end(6,5,4,3)
                                          {z3-z4}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x+9.94443,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...

special_diag_end->...,(SUFFIX3)r,1,1,(SUFFIX3)l,0)
                                                  --z0fi.endgroup
l.622  ...{z5-z6}special_diag_end(6,5,4,3)
                                          {z3-z4}
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+4086.11118
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...

special_diag_end->...,(SUFFIX3)r,1,1,(SUFFIX3)l,0)
                                                  --z0fi.endgroup
l.622  ...{z5-z6}special_diag_end(6,5,4,3)
                                          {z3-z4}
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...

special_diag_end->...,(SUFFIX3)r,1,1,(SUFFIX3)l,0)
                                                  --z0fi.endgroup
l.622  ...{z5-z6}special_diag_end(6,5,4,3)
                                          {z3-z4}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
special_diag_end->...,(SUFFIX3)r,1,1,(SUFFIX3)l,0)
                                                  --z0fi.endgroup
l.622  ...{z5-z6}special_diag_end(6,5,4,3)
                                          {z3-z4}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Value is too large (4098).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.625  ...{z1-z2}diag_end(2r,1r,1,1,1l,2l)
                                          --cycle;  % diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4098).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.625  ...{z1-z2}diag_end(2r,1r,1,1,1l,2l)
                                          --cycle;  % diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4098).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.625  ...{z1-z2}diag_end(2r,1r,1,1,1l,2l)
                                          --cycle;  % diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4098).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.625  ...{z1-z2}diag_end(2r,1r,1,1,1l,2l)
                                          --cycle;  % diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4098.00003).
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.625  ...{z1-z2}diag_end(2r,1r,1,1,1l,2l)
                                          --cycle;  % diagonals
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
l.625  ...{z1-z2}diag_end(2r,1r,1,1,1l,2l)--cycle;
                                                    % diagonals
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! angle(0,0) is taken as zero.
prime_points_inside->...(z(SUFFIX0)r-z(SUFFIX0)l);
                                                  penpos(SUFFIX0)'(whatever,...
l.627  prime_points_inside(1,2)
                               ; prime_points_inside(5,6); prime_points_insi...
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Value is too large (8194).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.627  prime_points_inside(1,2)
                               ; prime_points_inside(5,6); prime_points_insi...
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8194.00006).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.627  prime_points_inside(1,2)
                               ; prime_points_inside(5,6); prime_points_insi...
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8189.88892).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.627  prime_points_inside(1,2)
                               ; prime_points_inside(5,6); prime_points_insi...
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Inconsistent equation (off by 8191.88885).
<to be read again> 
                   ;
l.627  prime_points_inside(1,2)
                               ; prime_points_inside(5,6); prime_points_insi...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...(z(SUFFIX0)r-z(SUFFIX0)l);
                                                  penpos(SUFFIX0)'(whatever,...
l.627 ...nts_inside(1,2); prime_points_inside(5,6)
                                                  ; prime_points_inside(8,7);
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Value is too large (8202).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.627 ...nts_inside(1,2); prime_points_inside(5,6)
                                                  ; prime_points_inside(8,7);
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8202.00006).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.627 ...nts_inside(1,2); prime_points_inside(5,6)
                                                  ; prime_points_inside(8,7);
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8182.1112).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.627 ...nts_inside(1,2); prime_points_inside(5,6)
                                                  ; prime_points_inside(8,7);
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Inconsistent equation (off by 8192.11115).
<to be read again> 
                   ;
l.627 ...nts_inside(1,2); prime_points_inside(5,6)
                                                  ; prime_points_inside(8,7);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...(z(SUFFIX0)r-z(SUFFIX0)l);
                                                  penpos(SUFFIX0)'(whatever,...
l.627 ...nts_inside(5,6); prime_points_inside(8,7)
                                                  ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Value is too large (-8174).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  
l.627 ...nts_inside(5,6); prime_points_inside(8,7)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Inconsistent equation (off by -8191.88885).
<to be read again> 
                   ;
l.627 ...nts_inside(5,6); prime_points_inside(8,7)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (4106).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.630  else: fill diag_end(6r,5r,1,1,5l,6l)
                                           --.9[z5l,z6l]
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4106).
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.630  else: fill diag_end(6r,5r,1,1,5l,6l)
                                           --.9[z5l,z6l]
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4106).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.630  else: fill diag_end(6r,5r,1,1,5l,6l)
                                           --.9[z5l,z6l]
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4106).
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.630  else: fill diag_end(6r,5r,1,1,5l,6l)
                                           --.9[z5l,z6l]
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4106.00003).
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.630  else: fill diag_end(6r,5r,1,1,5l,6l)
                                           --.9[z5l,z6l]
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
l.631    ..{z5-z6}.1[z5r,z6r]--cycle;
                                       % middle stem
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Value is too large (8210.00783).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8210.00783).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8201.22227).
serif->...(SUFFIX4)1=tiny.lft.x(SUFFIX2)l+(EXPR6);
                                                  if.x(SUFFIX4)3<x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8201.22227).
serif->...(SUFFIX4)1=tiny.lft.x(SUFFIX2)l+(EXPR6);
                                                  if.x(SUFFIX4)3<x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8210.00832).
serif->...FIX4)2+eps:x(SUFFIX4)3:=x(SUFFIX4)2+eps;
                                                  fi.else:z(SUFFIX4)2-penoff...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8210.00783).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8210.00783).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Value is too large (-8174.10338).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8174.10338).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8181.00008).
serif->...x(SUFFIX4)1=tiny.rt.x(SUFFIX2)r+(EXPR6);
                                                  if.x(SUFFIX4)3>x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8181.00008).
serif->...x(SUFFIX4)1=tiny.rt.x(SUFFIX2)r+(EXPR6);
                                                  if.x(SUFFIX4)3>x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8174.10387).
serif->...FIX4)2-eps:x(SUFFIX4)3:=x(SUFFIX4)2-eps;
                                                  fi.fi.pair.corner;ypart.co...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8174.10338).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8174.10338).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Curve out of range.
<to be read again> 
                   ;
erase->...fault_wt_:=_;cullit;(TEXT0)withweight._;
                                                  cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.637 ...(5',6,e,1/3,inner_jut2,f,1/2,inner_jut3);
                                                   fi  % middle serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Value is too large (8202.00783).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8202.00783).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8193.22227).
serif->...(SUFFIX4)1=tiny.lft.x(SUFFIX2)l+(EXPR6);
                                                  if.x(SUFFIX4)3<x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8193.22227).
serif->...(SUFFIX4)1=tiny.lft.x(SUFFIX2)l+(EXPR6);
                                                  if.x(SUFFIX4)3<x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8202.00832).
serif->...FIX4)2+eps:x(SUFFIX4)3:=x(SUFFIX4)2+eps;
                                                  fi.else:z(SUFFIX4)2-penoff...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8202.00783).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (8202.00783).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Value is too large (-8181.8811).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8181.8811).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8188.77779).
serif->...x(SUFFIX4)1=tiny.rt.x(SUFFIX2)r+(EXPR6);
                                                  if.x(SUFFIX4)3>x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8188.77779).
serif->...x(SUFFIX4)1=tiny.rt.x(SUFFIX2)r+(EXPR6);
                                                  if.x(SUFFIX4)3>x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8181.88159).
serif->...FIX4)2-eps:x(SUFFIX4)3:=x(SUFFIX4)2-eps;
                                                  fi.fi.pair.corner;ypart.co...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8181.8811).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-8181.8811).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Curve out of range.
<to be read again> 
                   ;
erase->...fault_wt_:=_;cullit;(TEXT0)withweight._;
                                                  cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.638 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

[87]
>> 1.90778
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...ic.aa_,bb_,cc_;bb_=(EXPR3)/(EXPR4);
                                                  cc_=(EXPR5)/(EXPR4);aa_=(E...
l.653 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> 9.57692
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...EXPR3)/(EXPR4);cc_=(EXPR5)/(EXPR4);
                                                  aa_=(EXPR2)*(EXPR2)-bb_*bb...
l.653 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -2.6396 has been replaced by 0.
diag_ratio->...2)-bb_*bb_;((EXPR2)*(cc_++sqrt.aa_)
                                                  -bb_*cc_)/aa_.endgroup
l.653 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> 1
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...ic.aa_,bb_,cc_;bb_=(EXPR3)/(EXPR4);
                                                  cc_=(EXPR5)/(EXPR4);aa_=(E...
l.654 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> 8.58458
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...EXPR3)/(EXPR4);cc_=(EXPR5)/(EXPR4);
                                                  aa_=(EXPR2)*(EXPR2)-bb_*bb...
l.654 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> 0
! Division by zero.
<to be read again> 
                   endgroup
l.654 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.655 ...(alpha1*stem1,0); penpos2(alpha2*stem2,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.656 penpos3(alpha2*stem2,0)
                             ; penpos4(alpha1*stem1,0);
(That was another `errmessage'.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+8.62955,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 8.62955
>> (-0.5from_x+4.31477,0.25)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.5from_x+4.31477,0.25)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x+2.34616,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 2.34616
>> (-to_x+2.34616,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x+2.34616,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.5from_x+4.31477
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.665 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+5.6397,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 5.6397
>> (-0.5from_x+2.81985,0.25)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.5from_x+2.81985,0.25)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x+11.92308,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 11.92308
>> (-to_x+11.92308,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x+11.92308,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.5from_x+2.81984
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.666   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 WNW NNW NNE NNW WNW 2 WSW SSW SSE ESE 3 (ENE) NNE 4 ENE NNE NNW NNE ENE 6 E
SE SSE SSW WSW 7 (WNW NNW) NNE 0 (NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.666   --diag_end(1l,4l,.5,1,4r,1r)--cycle;
                                             % left diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+2.30386,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 2.30386
>> (-0.5from_x+1.15193,0.25)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.5from_x+1.15193,0.25)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x+2.30386,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 2.30386
>> (-to_x+2.30386,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x+2.30386,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.5from_x+1.15193
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.667  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+10.88844,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 10.88844
>> (-0.5from_x+5.44423,0.25)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.5from_x+5.44423,0.25)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x+10.88844,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 10.88844
>> (-to_x+10.88844,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x+10.88844,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.5from_x+5.44421
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.668   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.670  prime_points_inside(1,4)
                               ; prime_points_inside(2,3);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...(z(SUFFIX0)r-z(SUFFIX0)l);
                                                  penpos(SUFFIX0)'(whatever,...
l.670 ...nts_inside(1,4); prime_points_inside(2,3)
                                                  ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
l.670 ...nts_inside(1,4); prime_points_inside(2,3)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...(z(SUFFIX0)r-z(SUFFIX0)l);
                                                  penpos(SUFFIX0)'(whatever,...
l.671  prime_points_inside(3,2)
                               ; prime_points_inside(4,1);
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.671  prime_points_inside(3,2)
                               ; prime_points_inside(4,1);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
l.671 ...nts_inside(3,2); prime_points_inside(4,1)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x2'r+x1'r-16.85764
! Unknown relation will be considered false.
<to be read again> 
                   :
l.672 ...1'r+cap_jut+.5u+1<=lft x2'l-cap_jut-xjut:
                                                   inner_jut1=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4'l+x3'r+4.91925
! Unknown relation will be considered false.
<to be read again> 
                   :
l.674 ...3'r+cap_jut+.5u+1<=lft x4'l-cap_jut-xjut:
                                                   inner_jut2=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE16377
>> (-0.5x1'l-0.5x1'r+8.78139,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,0.5)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-0.5)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE16374
>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+8.7809
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE16288
>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-8.78139
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-5.9889
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE15727
>> (-0.5x1'l-0.5x1'r+8.78139,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x2'r-0.5x1'r+9.50574
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE15724
>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+8.78188
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE15628
>> (0.5x1'l+0.5x1'r-8.78139,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-8.78139
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.b2-0.16667x2'r+0.16667x1'l+0.33333x1'r+0.24152
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2-0.5x2'r+0.5x1'r+9.50574
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'r-0.5x1'r+9.50574
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'r+0.5x1'r+9.50574
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'r+0.5x1'r+9.50574
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.a1,dish_out)..
                                      (x1',dish_in){right}..(x.b1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.a1,dish_out)..(x1',dish_in){
                                                  right}..(x.b1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'r+0.5x1'r+9.50574
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.b1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.676 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE15437
>> (-0.5x4'l-0.5x4'r+5.48785,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x3'r+1.3827
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE15434
>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2+5.48834
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE15332
>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r-5.48785
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.c2+0.5x4'r+0.16667x3'r-1.36836
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x3'r+1.3827
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x3'r+1.3827
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+1.3827
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+1.3827
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE15169
>> (-0.5x4'l-0.5x4'r+5.48785,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE15166
>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2+5.48834
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE15080
>> (0.5x4'l+0.5x4'r-5.48785,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r-5.48785
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.d2+0.33334x4'l+0.5x4'r-3.52399
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+1.3827
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.c1,dish_out)..
                                      (x4',dish_in){right}..(x.d1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.c1,dish_out)..(x4',dish_in){
                                                  right}..(x.d1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.d1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.677 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'r+0.5x1'r-9.73268
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -0.66667x.e0+0.33333x1'r+4.40044
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.66667x.e0-0.33333x1'r-10.68106
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7778x.e0-0.2222x1'r-7.12071
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.33333x.e0+0.33333x1'r+10.68106
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.33333x.e0+0.33333x1'r-6.48845
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x.e0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x.e0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

>> -0.66675x.e0+0.33325x1'r+4.40054
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.66675x.e0-0.33325x1'r-10.68117
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66673x.e0-0.33327x1'r-6.1301
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.00009x.e0-0.00009x1'r+18.20425
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.e0-0.33333x1'r+7.52309
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.e0-0.33333x1'r+7.52309
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

>> x.e0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.e1,dish_out)..
                                      (x2',dish_in){right}..(x.f1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.e0-0.33333x1'r+7.52309
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.f1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.679   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x3'r-2.3044
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x3'r+21.77731
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x3'r+17.22626
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x3'r+3.57309
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x3'r+3.57309
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x3'r-1.15576
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x3'r+2.30438
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x3'r+17.16951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.16667x4'l+0.83333x3'r+11.06105
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x3'r-18.32527
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x3'r-1.15576
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r-1.15576
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r-1.15576
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x3'r+3.57309
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.g1,dish_out)..
                                      (x3',dish_in){right}..(x.h1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r-1.15576
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.h1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.681   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[88]
>> 4.13846
! Division by zero.
<to be read again> 
                   ;
l.693 dy=y1-y2; alpha=((x2l-x1l)++dy)/dy;
                                         
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.702 else: fill z0--
                     diag_end(0,4l,1,1,4r,3r)--z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12961
>> (-x0+8,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.702 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.702 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.702 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x+12.13846,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.702 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 12.13846
>> (-to_x+12.13846,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.702 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x+12.13846,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.702 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-8.5
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.702 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0+8
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.702 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.702 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.702 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.703     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.703     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12677
>> (x0-9.94763,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+1.86154,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 1.86154
>> (-from_x+1.86154,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+1.86154,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+9.94763,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 9.94763
>> (-x0+9.94763,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+9.94763,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-9.94763
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.704     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 ESE 1 (ENE) NNE ENE 2 (NNE NNW WNW) WSW (SSW SSE ESE) ENE 3 ESE SSE SSW WSW
 4 (WNW NNW NNE) ENE 5 (ESE SSE) SSW 6 (SSE ESE ENE) NNE NNW WNW 7 WSW 8 SSW 9 
(SSE ESE ENE) NNE 10 (NNW WNW) WSW 11 WNW NNW NNE ENE 13 ESE SSE SSW WSW 14 (WN
W NNW) NNE 0 (ENE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.704     --diag_end(2l,1l,1,1,1r,0)--cycle;
                                             fi  % diagonals and stem
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.706  prime_points_inside(1,2)
                               ; prime_points_inside(4,3); prime_points_insi...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
l.706 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ; prime_points_inside(6,5);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
l.706 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.706 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+4.6923
! Unknown relation will be considered false.
<to be read again> 
                   :
l.707  if rt x1'r+cap_jut+.5u+1<=lft x4'l-cap_jut:
                                                   inner_jut=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12333
>> (-0.5x1'l-0.5x1'r+10.04305,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,0.5)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-0.5)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12330
>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+10.04256
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12244
>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-10.04305
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-6.83003
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11683
>> (-0.5x1'l-0.5x1'r+10.04305,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-1.26924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11680
>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+10.04353
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11584
>> (0.5x1'l+0.5x1'r-10.04305,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-10.04305
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-5.33882
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-1.26924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-1.26924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-1.26924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-1.26924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.a1,dish_out)..
                                      (x1',dish_in){right}..(x.b1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.a1,dish_out)..(x1',dish_in){
                                                  right}..(x.b1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-1.26924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.b1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.709 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11395
>> (-0.5x4'l-0.5x4'r+5.88466,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+1.26924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11392
>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2+5.88515
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11290
>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r-5.88466
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r-1.97305
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+1.26924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+1.26924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+1.26924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+1.26924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE18880
>> (-0.5x4'l-0.5x4'r+5.88466,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE18877
>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2+5.88515
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE18782
>> (0.5x4'l+0.5x4'r-5.88466,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r-5.88466
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.25x4'l+0.5x4'r-2.7404
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+1.26924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.c1,dish_out)..
                                      (x4',dish_in){right}..(x.d1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.c1,dish_out)..(x4',dish_in){
                                                  right}..(x.d1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+0.8077
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.d1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.710 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[89] [90]) (/usr/local/texlive/2021/texmf-dist/fonts/source/public/cm/itall.mf
[97] [98]
> 0 NNE 1 ENE NNE 2 (NNW WNW) WSW 3 SSW WSW 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.52 ...5[bar_height,h]; top y2r=h+oo; bulb(2,1,0)
                                                  ;  % bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[99] [100] [101]
>> 0.6x4r+1.79988
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
bulb->...FFIX2)r=z(SUFFIX1)r;path_.l:=z(SUFFIX0)l{
                                                  x(SUFFIX1)r-x(SUFFIX0)r,0}...
l.108 bulb(2,1,0)
                 ; bulb(7,8,9);  % bulbs
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.6x4r+2.70012
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
bulb->..._.l:=z(SUFFIX0)l{x(SUFFIX1)r-x(SUFFIX0)r,
                                                  0}...{0,y(SUFFIX1)r-y(SUFF...
l.108 bulb(2,1,0)
                 ; bulb(7,8,9);  % bulbs
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.6x4r-2.70012
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
bulb->...-y(SUFFIX1)r}...{x(SUFFIX0)r-x(SUFFIX1)r,
                                                  0}z(SUFFIX0)r--cycle;path_...
l.108 bulb(2,1,0)
                 ; bulb(7,8,9);  % bulbs
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.6x4r+1.79988
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
bulb->....{x(SUFFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--
                                                  cycle;path_.r:=z(SUFFIX2)l...
l.108 bulb(2,1,0)
                 ; bulb(7,8,9);  % bulbs
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.6x5r+0.20009
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
bulb->...FFIX2)r=z(SUFFIX1)r;path_.l:=z(SUFFIX0)l{
                                                  x(SUFFIX1)r-x(SUFFIX0)r,0}...
l.108 bulb(2,1,0); bulb(7,8,9)
                              ;  % bulbs
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.6x5r+0.29991
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
bulb->..._.l:=z(SUFFIX0)l{x(SUFFIX1)r-x(SUFFIX0)r,
                                                  0}...{0,y(SUFFIX1)r-y(SUFF...
l.108 bulb(2,1,0); bulb(7,8,9)
                              ;  % bulbs
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.6x5r-0.29991
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
bulb->...-y(SUFFIX1)r}...{x(SUFFIX0)r-x(SUFFIX1)r,
                                                  0}z(SUFFIX0)r--cycle;path_...
l.108 bulb(2,1,0); bulb(7,8,9)
                              ;  % bulbs
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.6x5r+0.20009
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
bulb->....{x(SUFFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--
                                                  cycle;path_.r:=z(SUFFIX2)l...
l.108 bulb(2,1,0); bulb(7,8,9)
                              ;  % bulbs
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 SSW 1 (SSE ESE) ENE NNE 2 ENE 3 (ESE SSE) SSW WSW WNW 0 (WSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.108 bulb(2,1,0); bulb(7,8,9)
                              ;  % bulbs
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

>> 0.6x4r+1.79988
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<for(l)> path_(SUFFIX0):=z2(SUFFIX0){
                                     left}...z3(SUFFIX0)...{z89-z88}z4(SUFFI...

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.109 ...aw stroke z2e{left}...z3e...{z89-z88}z4e;
                                                    % upper arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.31999x4r+1.81021
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(l)> ...0):=z2(SUFFIX0){left}...z3(SUFFIX0)...
                                                  {z89-z88}z4(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.109 ...aw stroke z2e{left}...z3e...{z89-z88}z4e;
                                                    % upper arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ;
<for(l)> ......z3(SUFFIX0)...{z89-z88}z4(SUFFIX0);
                                                   ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.109 ...aw stroke z2e{left}...z3e...{z89-z88}z4e;
                                                    % upper arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.6x4r+1.79988
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<for(r)> path_(SUFFIX0):=z2(SUFFIX0){
                                     left}...z3(SUFFIX0)...{z89-z88}z4(SUFFI...

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.109 ...aw stroke z2e{left}...z3e...{z89-z88}z4e;
                                                    % upper arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.31999x4r+1.30972
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(r)> ...0):=z2(SUFFIX0){left}...z3(SUFFIX0)...
                                                  {z89-z88}z4(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.109 ...aw stroke z2e{left}...z3e...{z89-z88}z4e;
                                                    % upper arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ;
<for(r)> ......z3(SUFFIX0)...{z89-z88}z4(SUFFIX0);
                                                   ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.109 ...aw stroke z2e{left}...z3e...{z89-z88}z4e;
                                                    % upper arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.110 filldraw z4r--
                    z5l--z5r--z4l--cycle;  % stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x5r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.110 filldraw z4r--z5l--
                         z5r--z4l--cycle;  % stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x5r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.110 filldraw z4r--z5l--z5r--
                              z4l--cycle;  % stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.110 filldraw z4r--z5l--z5r--z4l--
                                   cycle;  % stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x5r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<for(l)> path_(SUFFIX0):=z5(SUFFIX0){
                                     z89-z88}...z6(SUFFIX0)...{left}z7(SUFFI...

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.111 ...aw stroke z5e{z89-z88}...z6e...{left}z7e;
                                                    % lower arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.31999x5r+1.5898
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(l)> ...=z5(SUFFIX0){z89-z88}...z6(SUFFIX0)...
                                                  {left}z7(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.111 ...aw stroke z5e{z89-z88}...z6e...{left}z7e;
                                                    % lower arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.6x5r+0.20009
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ;
<for(l)> ...88}...z6(SUFFIX0)...{left}z7(SUFFIX0);
                                                   ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.111 ...aw stroke z5e{z89-z88}...z6e...{left}z7e;
                                                    % lower arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x5r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<for(r)> path_(SUFFIX0):=z5(SUFFIX0){
                                     z89-z88}...z6(SUFFIX0)...{left}z7(SUFFI...

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.111 ...aw stroke z5e{z89-z88}...z6e...{left}z7e;
                                                    % lower arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.31999x5r+2.09029
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(r)> ...=z5(SUFFIX0){z89-z88}...z6(SUFFIX0)...
                                                  {left}z7(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.111 ...aw stroke z5e{z89-z88}...z6e...{left}z7e;
                                                    % lower arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.6x5r+0.20009
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ;
<for(r)> ...88}...z6(SUFFIX0)...{left}z7(SUFFIX0);
                                                   ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.111 ...aw stroke z5e{z89-z88}...z6e...{left}z7e;
                                                    % lower arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4r-2.00003
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(l)> path_(SUFFIX0):=z20(SUFFIX0)--
                                       z21(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.115 filldraw stroke z20e--z21e;
                                   %  crossbar
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4r+2.50005
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ;
<for(l)> ...(SUFFIX0):=z20(SUFFIX0)--z21(SUFFIX0);
                                                   ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.115 filldraw stroke z20e--z21e;
                                   %  crossbar
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4r-2.00003
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(r)> path_(SUFFIX0):=z20(SUFFIX0)--
                                       z21(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.115 filldraw stroke z20e--z21e;
                                   %  crossbar
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4r+2.50005
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ;
<for(r)> ...(SUFFIX0):=z20(SUFFIX0)--z21(SUFFIX0);
                                                   ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.115 filldraw stroke z20e--z21e;
                                   %  crossbar
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[102]
> 0 SSW SSE ESE ENE NNE 1 2 NNW WNW 3 (NNW) NNE 4 (ENE) ESE SSE SSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.134 filldraw circ_stroke z4e---z5e...{left}z6e;
                                                   % stem and arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[103]
> 0 WSW 1 (WNW NNW) NNE ENE ESE SSE ESE 2 ENE 3 NNE 4 (NNW WNW) WSW 5 SSW WSW 6
 7 WNW NNW WNW WSW SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
ital_arch->......super_arc.e((SUFFIX1),(SUFFIX2));
                                                  }}
l.147 x5=x4-.25u; ital_arch(2,3,4)
                                  ;  % arch
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[104] [105]
> 0 ENE 1 NNE 2 NNW WNW WSW 3 (WNW NNW) NNE 4 ENE 5 (ESE SSE) SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.175 filldraw stroke z2e---z3e...{left}z4e;
                                              % stem and arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[106] [107] [108]
> 0 WSW 1 (WNW NNW) NNE ENE ESE SSE ESE 2 ENE 3 NNE 4 (NNW WNW) WSW 5 SSW WSW 6
 7 WNW NNW WNW WSW SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
ital_arch->......super_arc.e((SUFFIX1),(SUFFIX2));
                                                  }}
l.228 ...stem=hround(.5w+.5stem); ital_arch(2,3,4)
                                                  ;  % left arch
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE ENE ESE SSE ESE 2 ENE 3 NNE 4 (NNW WNW) WSW 5 SSW WSW 6
 7 WNW NNW WNW WSW SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
ital_arch->......super_arc.e((SUFFIX1),(SUFFIX2));
                                                  }}
l.232 x8=x7-.25u; ital_arch(5,6,7)
                                  ;  % right arch
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[109]
> 0 WSW 1 (WNW NNW) NNE ENE ESE SSE ESE 2 ENE 3 NNE 4 (NNW WNW) WSW 5 SSW WSW 6
 7 WNW NNW WNW WSW SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
ital_arch->......super_arc.e((SUFFIX1),(SUFFIX2));
                                                  }}
l.247 ....5u+.5stem); x5=x4-.25u; ital_arch(2,3,4)
                                                  ;  % arch
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[110] [111] [112] [113] [114]
> 0 NNE 1 ENE NNE 2 (NNW WNW) WSW 3 SSW WSW 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.332 bulb(2',1,10)
                   ; bulb(7,8,9);  % bulbs
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 SSW 1 WSW SSW 2 (SSE ESE) ENE 3 NNE ENE 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.332 bulb(2',1,10); bulb(7,8,9)
                                ;  % bulbs
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[115] [116] [117] [118]
> 0 SSW WSW WNW NNW NNE 1 2 ENE 3 4 ESE SSE ESE ENE NNE 5 (NNW WNW) WSW 6 SSW W
SW WNW NNW WNW 7 WSW 8 SSW 9 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.397 ...c_stroke z6e..super_arc.e(7,8)...{up}z9e;
                                                    % middle stem and arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[119]
> 0 WSW 1 (WNW NNW) NNE ENE ESE SSE ESE 2 ENE 3 NNE 4 (NNW WNW) WSW 5 SSW WSW 6
 7 WNW NNW WNW WSW SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.412 filldraw stroke z0e{up}...pulled_arc.e(1,2);
                                                   % opening hook
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE ENE 2 3 ESE SSE ESE ENE NNE 4 (NNW WNW) WSW 5 SSW WSW W
NW NNW WNW 6 WSW 7 SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.414 filldraw stroke pulled_arc.e(3,4)...{up}z5e;
                                                    % closing hook
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 2 (SSW) SSE ESE 3 (SSE) SSW 4 (WSW) WNW NNW 0 (WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.419 filldraw stroke z3'e---z6e...{right}z7e;
                                               bulb(7,8,9);  % upper link an...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 2 (NNE) NNW WNW 3 (NNW) NNE 4 (ENE) ESE SSE 0 (ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.424 filldraw stroke z2'e---z16e...{left}z17e;
                                                bulb(17,18,19); % lower link...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[120]
> 0 SSW 1 WSW SSW 2 (SSE ESE) ENE 3 NNE ENE 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.440 lft x9r=hround(2.75u-.5flare); bulb(8,9,10)
                                                 ;  % bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 SSW SSE ESE ENE NNE 1 2 NNW WNW 3 (NNW) NNE 4 (ENE) ESE SSE SSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.443 filldraw circ_stroke z6e---z7e...{left}z8e;
                                                   % right stem and link
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[121]
> 0 ENE 1 NNE ENE ESE SSE ESE 2 ENE 3 ESE SSE ESE 4 (SSE SSW) WSW 5 WNW NNW WNW
 6 WSW 7 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.458 ...1e{up}...z2e{right}..z3e{right}...{p}z4e;
                                                    % upper bar
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 ESE 2 ENE 3 4 (NNE NNW WNW) WSW 5 SSW WSW WNW NNW WNW 6 WSW 7 WNW 0 (
NNW NNE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.459 ...5e{p}...z6e{right}..{right}z7e...{up}z8e;
                                                    % lower bar
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[122]) (/usr/local/texlive/2021/texmf-dist/fonts/source/public/cm/greeku.mf
[0]
! Value is too large (14745.59375).
diag_ratio->...EXPR3)/(EXPR4);cc_=(EXPR5)/(EXPR4);
                                                  aa_=(EXPR2)*(EXPR2)-bb_*bb...
l.31 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Arithmetic overflow.
diag_ratio->...EXPR4);aa_=(EXPR2)*(EXPR2)-bb_*bb_;
                                                  ((EXPR2)*(cc_++sqrt.aa_)-b...
l.31 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (-32763.99998).
diag_ratio->...EXPR4);aa_=(EXPR2)*(EXPR2)-bb_*bb_;
                                                  ((EXPR2)*(cc_++sqrt.aa_)-b...
l.31 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Square root of -32763.99998 has been replaced by 0.
diag_ratio->...2)-bb_*bb_;((EXPR2)*(cc_++sqrt.aa_)
                                                  -bb_*cc_)/aa_.endgroup
l.31 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! Arithmetic overflow.
diag_ratio->..._;((EXPR2)*(cc_++sqrt.aa_)-bb_*cc_)
                                                  /aa_.endgroup
l.31 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (14564.44444).
l.36 y5=y6=cap_vstem; z5=whatever[z1r,z2r];
                                            z6=whatever[z3l,z4l];
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (14564.44444).
l.36 y5=y6=cap_vstem; z5=whatever[z1r,z2r];
                                            z6=whatever[z3l,z4l];
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-14548.55556).
l.36 ...5=whatever[z1r,z2r]; z6=whatever[z3l,z4l];
                                                  
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-14548.55556).
l.36 ...5=whatever[z1r,z2r]; z6=whatever[z3l,z4l];
                                                  
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
l.40 else: unfill z0--z5--z6--cycle;
                                     fi  % counter
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

[1] [2]
! Value is too large (8601.5).
diag_ratio->...EXPR3)/(EXPR4);cc_=(EXPR5)/(EXPR4);
                                                  aa_=(EXPR2)*(EXPR2)-bb_*bb...
l.76 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Arithmetic overflow.
diag_ratio->...EXPR4);aa_=(EXPR2)*(EXPR2)-bb_*bb_;
                                                  ((EXPR2)*(cc_++sqrt.aa_)-b...
l.76 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (-32763.99998).
diag_ratio->...EXPR4);aa_=(EXPR2)*(EXPR2)-bb_*bb_;
                                                  ((EXPR2)*(cc_++sqrt.aa_)-b...
l.76 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Square root of -32763.99998 has been replaced by 0.
diag_ratio->...2)-bb_*bb_;((EXPR2)*(cc_++sqrt.aa_)
                                                  -bb_*cc_)/aa_.endgroup
l.76 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! Arithmetic overflow.
diag_ratio->..._;((EXPR2)*(cc_++sqrt.aa_)-bb_*cc_)
                                                  /aa_.endgroup
l.76 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (4098.3125).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.87  prime_points_inside(1,2)
                              ; prime_points_inside(4,3);
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4098.31262).
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.87  prime_points_inside(1,2)
                              ; prime_points_inside(4,3);
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4097.55426).
serif->...(SUFFIX4)1=tiny.lft.x(SUFFIX2)l+(EXPR6);
                                                  if.x(SUFFIX4)3<x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.90 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4097.55426).
serif->...(SUFFIX4)1=tiny.lft.x(SUFFIX2)l+(EXPR6);
                                                  if.x(SUFFIX4)3<x(SUFFIX4)2...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.90 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.90 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Curve out of range.
<to be read again> 
                   ;
erase->...fault_wt_:=_;cullit;(TEXT0)withweight._;
                                                  cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.90 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Value is too large (4105.75).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.91 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4105.75).
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.91 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4105.75049).
serif->...FIX4)2+eps:x(SUFFIX4)3:=x(SUFFIX4)2+eps;
                                                  fi.else:z(SUFFIX4)2-penoff...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.91 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4105.75).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.91 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4105.75).
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.91 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.91 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Curve out of range.
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.91 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

! Curve out of range.
<to be read again> 
                   ;
erase->...fault_wt_:=_;cullit;(TEXT0)withweight._;
                                                  cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.91 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
At least one of the coordinates in the path I'm about to
digitize was really huge (potentially bigger than 4095).
So I've cut it back to the maximum size.
The results will probably be pretty wild.

[3] [4] [5]
! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.156 penpos1(alpha1*(cap_stem-tiny),0)
                                       ; penpos2(alpha1*(cap_stem-tiny),0);
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.156 ...ny),0); penpos2(alpha1*(cap_stem-tiny),0)
                                                  ;
(That was another `errmessage'.)

! bad penpos.
<to be read again> 
                   ;
penpos->...3):if(EXPR3)<=0:errmessage"bad penpos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.157 penpos3(alpha1*(cap_stem-tiny),0)
                                       ;
(That was another `errmessage'.)

[6] [7] [8] [9]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   ;
l.253 (x,y)=p intersectionpoint((0,y6l)--(w,y6l));
                                                   x6l:=x;
(That was another `errmessage'.)

[10]) (/usr/local/texlive/2021/texmf-dist/fonts/source/public/cm/greekl.mf
[11]
> 0 WSW 1 SSW 2 SSE ESE 3 4 SSE SSW 5 WSW 6 7 WNW NNW NNE 8 ENE 9 (ESE SSE) SSW
 SSE ESE 10 ENE 11 NNE 12 NNW WNW 13 14 NNW NNE 15 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.42  & pulled_arc.e(3,4)...{up}z5e;
                                      % stem and upper bowl
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[12]
> 0 SSW 1 WSW SSW SSE ESE ENE NNE 2 ENE ESE SSE ESE 3 ENE 4 (NNE NNW) WNW NNW W
NW WSW SSW 5 WSW WNW NNW NNE ENE 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.62 ... z5e{left}...z6e{up}..{2(x7-x6),y7-y6}z7e;
                                                    % stem
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[13] [14] [15] [16]
> 0 WSW 1 (WNW NNW) NNE ENE ESE SSE ESE 2 ENE 3 NNE 4 (NNW WNW) WSW 5 SSW WSW 6
 7 WNW NNW WNW WSW SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
ital_arch->......super_arc.e((SUFFIX1),(SUFFIX2));
                                                  }}
l.136 ...m=hround(w-1.5u+.5stem); ital_arch(2,3,4)
                                                  ;  % arch
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[17] [18] [19] [20]
> 0 NNW WNW WSW SSW SSE ESE 1 2 (SSE SSW) WSW 3 (WNW) NNW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.195 filldraw circ_stroke z6e--z5e;
                                     % short diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[21]
> 0 WSW 1 (WNW NNW) NNE ENE 2 3 ESE ENE NNE 4 (NNW WNW) WSW 5 SSW WSW WNW 6 WSW
 7 SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.209 filldraw stroke super_arc.e(3,4)...{up}z5e;
                                                  % left stem and arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[22]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
l.223 ...h}z3)intersectionpoint((x2r,0)--(x2r,h)))
                                                  ;
(That was another `errmessage'.)

[23] [24]
> 0 ESE SSE SSW WSW 1 2 WNW NNW 3 (WNW) WSW 4 (SSW) SSE ESE 5 ENE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.257 adjust_fit(0,0); pi_stroke;
                                  % hook and bar
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[25] [26] [27]
> 0 ESE SSE SSW WSW 1 2 WNW NNW 3 (WNW) WSW 4 (SSW) SSE ESE 5 ENE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.298 adjust_fit(0,0); pi_stroke;
                                  % hook and bar
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[28] [29] [30] [31] [32]
! bad pos.
<to be read again> 
                   ;
pos->...XPR3)<=currentbreadth:errmessage"bad pos";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.376 ...u; pos1(hair+dw,angle(2(x1-x2),y1-y2)+90)
                                                  ;
(That was another `errmessage'.)

> 0 ESE SSE SSW WSW WNW 1 NNW WNW WSW SSW 2 SSE ESE ENE 3 ESE ENE NNE 4 NNW WNW
 5 (WSW) SSW 6 (SSE) ESE SSE SSW 7 WSW WNW NNW WNW 8 WSW SSW WSW WNW NNW NNE 9 
ENE ESE SSE ESE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.385  ...{up}z4e...{left}z5e;
                                % left arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[33] [34]
> 0 WSW 2 (WNW NNW) NNE ENE 3 4 ESE 5 SSE SSW 6 WSW 7 8 WNW NNW WNW WSW SSW 9 (
SSE) ESE 10 (ENE) NNE 11 (NNW WNW) WSW WNW NNW NNE 12 ENE ESE SSE ESE 13 ENE 14
 NNE 15 NNW WNW 16 17 WSW 18 SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.425  ...{down}z7e...{4(x8-x7),y8-y7}z8e;
                                            % bowl and loop
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[35]
> 0 ESE SSE SSW WSW 1 2 WNW NNW 3 (WNW) WSW 4 (SSW) SSE ESE 5 ENE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.432 adjust_fit(0,0); pi_stroke;
                                  % hook and bar
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 WNW NNW WNW WSW SSW 2 SSE ESE ENE 3 ESE ENE NNE 4 (NNW WNW) WSW 5 SSW
 WSW WNW NNW WNW 6 WSW SSW WSW WNW NNW NNE 7 ENE ESE SSE ESE 0 (SSE SSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.440  ...z6e{right}...z7e{up};
                                 % left bowl
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 ESE SSE SSW 2 WSW WNW 3 WSW WNW NNW NNE 4 ENE 5 (ESE SSE) SSW SSE ESE
 ENE NNE ENE 6 ESE SSE ESE ENE NNE 7 NNW WNW WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.442  ...z8e{left}...z7'e{up};
                                 % right bowl
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[36]
> 0 SSW 1 WSW 2 SSW 3 (SSE ESE) ENE 4 NNE ENE 5 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.459 ...,1'); filldraw stroke pulled_arc.e(1,2');
                                                   % tail
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[37] [38] [39])
(/usr/local/texlive/2021/texmf-dist/fonts/source/public/cm/italms.mf
> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 WSW 6 SSW 7 SSE ESE 8 9 ENE NNE 10 (NNW WNW) 
WSW 11 SSW WSW 12 WNW 13 NNW NNE 14 ENE 15 16 ESE 17 SSE SSW 18 WSW 19 0 (WNW N
NW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.30  & z6e{right}...{direction t of p}z7e;
                                             % arc and bowl
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[64] [96] [123]
> 0 ENE 1 NNE 2 NNW WNW WSW 3 (WNW NNW) NNE 4 ENE 5 (ESE SSE) SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.70 filldraw stroke z2e---z3e...{left}z4e;
                                             % stem and arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[124] [125] [126] [127])
(/usr/local/texlive/2021/texmf-dist/fonts/source/public/cm/olddig.mf [48]
[49]
> 0 WNW 1 NNW 2 (NNE) ENE 3 (ESE) SSE ESE 0 (ENE NNE NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.55 ...2l)=whatever[z1l,z2r]; x2l:=x; bulb(2,1,0)
                                                  ;  % bulb and arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[50] [51]
> 0 SSW WSW 1 2 WNW 3 4 WSW SSW 5 6 (SSE ESE) ENE 7 NNE 8 (ENE) ESE 9 (SSE) SSW
 10 (SSE ESE) ENE 11 (ESE SSE) SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.128  --z2l--z2r--cycle;
                           % diagonal and upper stem
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[52]
> 0 SSW 1 WSW SSW 2 (SSE ESE) ENE 3 NNE ENE 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.160 ...re+1/3(cap_stem-stem),-180); bulb(8,9,10)
                                                  ;  % bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[53]
> 0 NNE 1 (NNW) WNW 2 NNW 3 NNE ENE 4 5 ESE 6 SSE 7 SSW WSW 8 9 WNW NNW NNE 10 
ENE 11 (ESE SSE) SSW SSE ESE 12 ENE 13 NNE 14 NNW WNW 15 16 WSW 17 SSW 18 SSE E
SE 19 0 (ENE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.200  & z6e{left}...{direction t of p}z7e;
                                             % arc and bowl
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[54]
> 0 ENE 1 (NNE NNW) WNW 2 NNW NNE ENE ESE SSE 3 (SSW) WSW 4 (WNW) NNW WNW WSW S
SW SSE ESE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.237  filldraw stroke z4e---z5e...{down}z6e;
                                              fi  % stroke
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[55] [56]
> 0 SSW 1 (SSE) ESE 2 SSE 3 SSW WSW 4 5 WNW 6 NNW 7 NNE ENE 8 9 ESE SSE SSW 10 
WSW 11 (WNW NNW) NNE NNW WNW 12 WSW 13 SSW 14 SSE ESE 15 16 ENE 17 NNE 18 NNW W
NW 19 0 (WSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.309  & z6e{right}...{direction t of p}z7e;
                                              % arc and bowl
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[57]) (/usr/local/texlive/2021/texmf-dist/fonts/source/public/cm/romms.mf
[40] [41] [42] [43] [44] [45] [46] [47] [58]
> 0 NNE 1 (ENE) ESE SSE 2 SSW WSW WNW NNW 3 WNW 4 (WSW) SSW SSE ESE ENE NNE 5 N
NW (WNW) WSW SSW WSW 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
comma->...ht}...z(SUFFIX1)2e{down}...z(SUFFIX1)3e;
                                                  fi.penlabels((SUFFIX1)1,(S...
l.131 comma(1,a,dot_diam,.2u,comma_depth)
                                         ;  % dot and tail
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[59] [60] [61] [62] [63]
> 0 WSW 1 (WNW NNW) NNE ENE 2 ESE SSE 3 SSW WSW WNW 4 WSW 5 (SSW SSE) ESE ENE N
NE 6 NNW WNW WSW SSW WSW 7 WNW WSW SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.189  ...{2(x3-x5e),y3-y5e}z3e;
                                  % bowl
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[91] [92] [93] [94] [95]) ) ) )
Font metrics written on cmmi0.tfm.
Output written on cmmi0.600gf (128 characters, 3536 bytes).
